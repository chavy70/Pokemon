// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokemon.Data;

#nullable disable

namespace Pokemon.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pokemon.Models.Ability", b =>
                {
                    b.Property<int>("Id_Ability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Ability"));

                    b.Property<int?>("Id_AbilityInfo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Ability");

                    b.HasIndex("Id_AbilityInfo")
                        .IsUnique()
                        .HasFilter("[Id_AbilityInfo] IS NOT NULL");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("Pokemon.Models.AbilityInfo", b =>
                {
                    b.Property<int>("Id_AbilityInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_AbilityInfo"));

                    b.Property<int?>("Id_Pokemons")
                        .HasColumnType("int");

                    b.Property<bool?>("Is_Hidden")
                        .HasColumnType("bit");

                    b.Property<int?>("Slot")
                        .HasColumnType("int");

                    b.HasKey("Id_AbilityInfo");

                    b.HasIndex("Id_Pokemons");

                    b.ToTable("AbilityInfo");
                });

            modelBuilder.Entity("Pokemon.Models.Form", b =>
                {
                    b.Property<int>("Id_Form")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Form"));

                    b.Property<int?>("Id_Pokemons")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Form");

                    b.HasIndex("Id_Pokemons");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("Pokemon.Models.GameIndex", b =>
                {
                    b.Property<int>("Id_GameIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_GameIndex"));

                    b.Property<int?>("Game_Index")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Pokemons")
                        .HasColumnType("int");

                    b.Property<string>("VersionId_VersionInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_GameIndex");

                    b.HasIndex("Id_Pokemons");

                    b.HasIndex("VersionId_VersionInfo");

                    b.ToTable("GameIndex");
                });

            modelBuilder.Entity("Pokemon.Models.Move", b =>
                {
                    b.Property<int>("Id_Move")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Move"));

                    b.Property<int?>("Id_MoveInfo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Move");

                    b.HasIndex("Id_MoveInfo")
                        .IsUnique()
                        .HasFilter("[Id_MoveInfo] IS NOT NULL");

                    b.ToTable("Move");
                });

            modelBuilder.Entity("Pokemon.Models.MoveInfo", b =>
                {
                    b.Property<int>("Id_MoveInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_MoveInfo"));

                    b.Property<int?>("Id_Pokemons")
                        .HasColumnType("int");

                    b.HasKey("Id_MoveInfo");

                    b.HasIndex("Id_Pokemons");

                    b.ToTable("MoveInfo");
                });

            modelBuilder.Entity("Pokemon.Models.MoveLearnMethod", b =>
                {
                    b.Property<int>("Id_MoveLearnMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_MoveLearnMethod"));

                    b.Property<int?>("Id_VersionGroupDetail")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_MoveLearnMethod");

                    b.HasIndex("Id_VersionGroupDetail")
                        .IsUnique()
                        .HasFilter("[Id_VersionGroupDetail] IS NOT NULL");

                    b.ToTable("MoveLearnMethod");
                });

            modelBuilder.Entity("Pokemon.Models.Pokemons", b =>
                {
                    b.Property<int>("Id_Pokemons")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Pokemons"));

                    b.Property<int?>("Base_Experience")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Is_Default")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId_Species")
                        .HasColumnType("int");

                    b.Property<string>("SpritesId_Sprites")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id_Pokemons");

                    b.HasIndex("SpeciesId_Species");

                    b.HasIndex("SpritesId_Sprites");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Pokemon.Models.Species", b =>
                {
                    b.Property<int>("Id_Species")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Species"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Species");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Pokemon.Models.Sprites", b =>
                {
                    b.Property<string>("Id_Sprites")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Back_Default")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Back_Female")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Back_Shiny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Back_Shiny_Female")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Front_Default")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Front_Female")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Front_Shiny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Front_Shiny_Female")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Sprites");

                    b.ToTable("Sprites");
                });

            modelBuilder.Entity("Pokemon.Models.Stat", b =>
                {
                    b.Property<int>("Id_Stat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Stat"));

                    b.Property<int?>("Id_StatInfo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Stat");

                    b.HasIndex("Id_StatInfo")
                        .IsUnique()
                        .HasFilter("[Id_StatInfo] IS NOT NULL");

                    b.ToTable("Stat");
                });

            modelBuilder.Entity("Pokemon.Models.StatInfo", b =>
                {
                    b.Property<int>("Id_StatInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_StatInfo"));

                    b.Property<int?>("Base_Stat")
                        .HasColumnType("int");

                    b.Property<int?>("Effort")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Pokemons")
                        .HasColumnType("int");

                    b.HasKey("Id_StatInfo");

                    b.HasIndex("Id_Pokemons");

                    b.ToTable("StatInfo");
                });

            modelBuilder.Entity("Pokemon.Models.Type", b =>
                {
                    b.Property<int>("Id_Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Type"));

                    b.Property<int?>("Id_TypeInfo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Type");

                    b.HasIndex("Id_TypeInfo")
                        .IsUnique()
                        .HasFilter("[Id_TypeInfo] IS NOT NULL");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("Pokemon.Models.TypeInfo", b =>
                {
                    b.Property<int>("Id_TypeInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_TypeInfo"));

                    b.Property<int?>("Id_Pokemons")
                        .HasColumnType("int");

                    b.Property<int?>("Slot")
                        .HasColumnType("int");

                    b.HasKey("Id_TypeInfo");

                    b.HasIndex("Id_Pokemons");

                    b.ToTable("TypeInfo");
                });

            modelBuilder.Entity("Pokemon.Models.VersionGroup", b =>
                {
                    b.Property<int>("Id_VersionGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_VersionGroup"));

                    b.Property<int?>("Id_VersionGroupDetail")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_VersionGroup");

                    b.HasIndex("Id_VersionGroupDetail")
                        .IsUnique()
                        .HasFilter("[Id_VersionGroupDetail] IS NOT NULL");

                    b.ToTable("VersionGroup");
                });

            modelBuilder.Entity("Pokemon.Models.VersionGroupDetail", b =>
                {
                    b.Property<int>("Id_VersionGroupDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_VersionGroupDetail"));

                    b.Property<int?>("Id_MoveInfo")
                        .HasColumnType("int");

                    b.Property<int?>("Level_Learned_At")
                        .HasColumnType("int");

                    b.HasKey("Id_VersionGroupDetail");

                    b.HasIndex("Id_MoveInfo");

                    b.ToTable("VersionGroupDetail");
                });

            modelBuilder.Entity("Pokemon.Models.VersionInfo", b =>
                {
                    b.Property<string>("Id_VersionInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_VersionInfo");

                    b.ToTable("VersionInfo");
                });

            modelBuilder.Entity("Pokemon.Models.Ability", b =>
                {
                    b.HasOne("Pokemon.Models.AbilityInfo", "AbilityInfo")
                        .WithOne("Ability")
                        .HasForeignKey("Pokemon.Models.Ability", "Id_AbilityInfo");

                    b.Navigation("AbilityInfo");
                });

            modelBuilder.Entity("Pokemon.Models.AbilityInfo", b =>
                {
                    b.HasOne("Pokemon.Models.Pokemons", "Pokemons")
                        .WithMany("Abilities")
                        .HasForeignKey("Id_Pokemons");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Pokemon.Models.Form", b =>
                {
                    b.HasOne("Pokemon.Models.Pokemons", "Pokemons")
                        .WithMany("Forms")
                        .HasForeignKey("Id_Pokemons");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Pokemon.Models.GameIndex", b =>
                {
                    b.HasOne("Pokemon.Models.Pokemons", "Pokemons")
                        .WithMany("Game_Indices")
                        .HasForeignKey("Id_Pokemons");

                    b.HasOne("Pokemon.Models.VersionInfo", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId_VersionInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemons");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Pokemon.Models.Move", b =>
                {
                    b.HasOne("Pokemon.Models.MoveInfo", "MoveInfo")
                        .WithOne("Move")
                        .HasForeignKey("Pokemon.Models.Move", "Id_MoveInfo");

                    b.Navigation("MoveInfo");
                });

            modelBuilder.Entity("Pokemon.Models.MoveInfo", b =>
                {
                    b.HasOne("Pokemon.Models.Pokemons", "Pokemons")
                        .WithMany("Moves")
                        .HasForeignKey("Id_Pokemons");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Pokemon.Models.MoveLearnMethod", b =>
                {
                    b.HasOne("Pokemon.Models.VersionGroupDetail", "VersionGroupDetail")
                        .WithOne("Move_Learn_Method")
                        .HasForeignKey("Pokemon.Models.MoveLearnMethod", "Id_VersionGroupDetail");

                    b.Navigation("VersionGroupDetail");
                });

            modelBuilder.Entity("Pokemon.Models.Pokemons", b =>
                {
                    b.HasOne("Pokemon.Models.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId_Species")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokemon.Models.Sprites", "Sprites")
                        .WithMany()
                        .HasForeignKey("SpritesId_Sprites")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");

                    b.Navigation("Sprites");
                });

            modelBuilder.Entity("Pokemon.Models.Stat", b =>
                {
                    b.HasOne("Pokemon.Models.StatInfo", "StatInfo")
                        .WithOne("Stat")
                        .HasForeignKey("Pokemon.Models.Stat", "Id_StatInfo");

                    b.Navigation("StatInfo");
                });

            modelBuilder.Entity("Pokemon.Models.StatInfo", b =>
                {
                    b.HasOne("Pokemon.Models.Pokemons", "Pokemons")
                        .WithMany("Stats")
                        .HasForeignKey("Id_Pokemons");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Pokemon.Models.Type", b =>
                {
                    b.HasOne("Pokemon.Models.TypeInfo", "TypeInfo")
                        .WithOne("Type")
                        .HasForeignKey("Pokemon.Models.Type", "Id_TypeInfo");

                    b.Navigation("TypeInfo");
                });

            modelBuilder.Entity("Pokemon.Models.TypeInfo", b =>
                {
                    b.HasOne("Pokemon.Models.Pokemons", "Pokemons")
                        .WithMany("Types")
                        .HasForeignKey("Id_Pokemons");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Pokemon.Models.VersionGroup", b =>
                {
                    b.HasOne("Pokemon.Models.VersionGroupDetail", "VersionGroupDetail")
                        .WithOne("Version_Group")
                        .HasForeignKey("Pokemon.Models.VersionGroup", "Id_VersionGroupDetail");

                    b.Navigation("VersionGroupDetail");
                });

            modelBuilder.Entity("Pokemon.Models.VersionGroupDetail", b =>
                {
                    b.HasOne("Pokemon.Models.MoveInfo", "MoveInfo")
                        .WithMany("Version_Group_Details")
                        .HasForeignKey("Id_MoveInfo");

                    b.Navigation("MoveInfo");
                });

            modelBuilder.Entity("Pokemon.Models.AbilityInfo", b =>
                {
                    b.Navigation("Ability")
                        .IsRequired();
                });

            modelBuilder.Entity("Pokemon.Models.MoveInfo", b =>
                {
                    b.Navigation("Move")
                        .IsRequired();

                    b.Navigation("Version_Group_Details");
                });

            modelBuilder.Entity("Pokemon.Models.Pokemons", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Forms");

                    b.Navigation("Game_Indices");

                    b.Navigation("Moves");

                    b.Navigation("Stats");

                    b.Navigation("Types");
                });

            modelBuilder.Entity("Pokemon.Models.StatInfo", b =>
                {
                    b.Navigation("Stat")
                        .IsRequired();
                });

            modelBuilder.Entity("Pokemon.Models.TypeInfo", b =>
                {
                    b.Navigation("Type")
                        .IsRequired();
                });

            modelBuilder.Entity("Pokemon.Models.VersionGroupDetail", b =>
                {
                    b.Navigation("Move_Learn_Method")
                        .IsRequired();

                    b.Navigation("Version_Group")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
